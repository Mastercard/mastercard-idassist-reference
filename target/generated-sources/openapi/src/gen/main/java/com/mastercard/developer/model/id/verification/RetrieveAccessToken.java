/*
 * Mastercard Id Verification API
 * ID Verification provides the technology platform and operational service to perform real-time user identity verification for various use cases including financial services, healthcare, travel and education. The solution is offered via APIs to prove the identity of users based on their verified phone number and social security number.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.model.id.verification;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * RetrieveAccessToken
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-08T13:32:52.448-06:00[America/Chicago]")
public class RetrieveAccessToken {
  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_SDK_VERSION = "sdkVersion";
  @SerializedName(SERIALIZED_NAME_SDK_VERSION)
  private String sdkVersion;

  /**
   * liveness type, GPA takes longer and provides more accuracy, LA is faster
   */
  @JsonAdapter(LivenessTypeEnum.Adapter.class)
  public enum LivenessTypeEnum {
    GPA("GPA"),
    
    LA("LA");

    private String value;

    LivenessTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LivenessTypeEnum fromValue(String value) {
      for (LivenessTypeEnum b : LivenessTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<LivenessTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LivenessTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LivenessTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return LivenessTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LIVENESS_TYPE = "livenessType";
  @SerializedName(SERIALIZED_NAME_LIVENESS_TYPE)
  private LivenessTypeEnum livenessType;

  /**
   * the platform of enrollment process
   */
  @JsonAdapter(ChannelTypeEnum.Adapter.class)
  public enum ChannelTypeEnum {
    WEB("WEB"),
    
    SDK("SDK");

    private String value;

    ChannelTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ChannelTypeEnum fromValue(String value) {
      for (ChannelTypeEnum b : ChannelTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ChannelTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ChannelTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ChannelTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ChannelTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CHANNEL_TYPE = "channelType";
  @SerializedName(SERIALIZED_NAME_CHANNEL_TYPE)
  private ChannelTypeEnum channelType;

  public static final String SERIALIZED_NAME_SUCCESS_URL = "successUrl";
  @SerializedName(SERIALIZED_NAME_SUCCESS_URL)
  private String successUrl;

  public static final String SERIALIZED_NAME_ERROR_URL = "errorUrl";
  @SerializedName(SERIALIZED_NAME_ERROR_URL)
  private String errorUrl;

  public static final String SERIALIZED_NAME_LOCALE = "locale";
  @SerializedName(SERIALIZED_NAME_LOCALE)
  private String locale = "en-US";


  public RetrieveAccessToken countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * ISO-3166 Alpha-2 standard.
   * @return countryCode
  **/
  @ApiModelProperty(example = "US", required = true, value = "ISO-3166 Alpha-2 standard.")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public RetrieveAccessToken sdkVersion(String sdkVersion) {
    
    this.sdkVersion = sdkVersion;
    return this;
  }

   /**
   * sdk version
   * @return sdkVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1.0.0", value = "sdk version")

  public String getSdkVersion() {
    return sdkVersion;
  }


  public void setSdkVersion(String sdkVersion) {
    this.sdkVersion = sdkVersion;
  }


  public RetrieveAccessToken livenessType(LivenessTypeEnum livenessType) {
    
    this.livenessType = livenessType;
    return this;
  }

   /**
   * liveness type, GPA takes longer and provides more accuracy, LA is faster
   * @return livenessType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "GPA", value = "liveness type, GPA takes longer and provides more accuracy, LA is faster")

  public LivenessTypeEnum getLivenessType() {
    return livenessType;
  }


  public void setLivenessType(LivenessTypeEnum livenessType) {
    this.livenessType = livenessType;
  }


  public RetrieveAccessToken channelType(ChannelTypeEnum channelType) {
    
    this.channelType = channelType;
    return this;
  }

   /**
   * the platform of enrollment process
   * @return channelType
  **/
  @ApiModelProperty(example = "WEB", required = true, value = "the platform of enrollment process")

  public ChannelTypeEnum getChannelType() {
    return channelType;
  }


  public void setChannelType(ChannelTypeEnum channelType) {
    this.channelType = channelType;
  }


  public RetrieveAccessToken successUrl(String successUrl) {
    
    this.successUrl = successUrl;
    return this;
  }

   /**
   * This is mandatory in case of WEB only, Not Mandatory for SDK. Do not send these fields in case of SDK channelType
   * @return successUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://www.rp.com/success", value = "This is mandatory in case of WEB only, Not Mandatory for SDK. Do not send these fields in case of SDK channelType")

  public String getSuccessUrl() {
    return successUrl;
  }


  public void setSuccessUrl(String successUrl) {
    this.successUrl = successUrl;
  }


  public RetrieveAccessToken errorUrl(String errorUrl) {
    
    this.errorUrl = errorUrl;
    return this;
  }

   /**
   * This is mandatory in case of WEB only, Not Mandatory for SDK. Do not send these fields in case of SDK channelType
   * @return errorUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://www.rp.com/error", value = "This is mandatory in case of WEB only, Not Mandatory for SDK. Do not send these fields in case of SDK channelType")

  public String getErrorUrl() {
    return errorUrl;
  }


  public void setErrorUrl(String errorUrl) {
    this.errorUrl = errorUrl;
  }


  public RetrieveAccessToken locale(String locale) {
    
    this.locale = locale;
    return this;
  }

   /**
   * IETF BCP 47 Format E.g. \&quot;en-GB\&quot; (English - United Kingdom), \&quot;es-MX\&quot; (Spanish - Mexico). More information: Locale ID (LCID) as defined by Microsoft. Not required. The default value is \&quot;en-US\&quot;.
   * @return locale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "en-GB", value = "IETF BCP 47 Format E.g. \"en-GB\" (English - United Kingdom), \"es-MX\" (Spanish - Mexico). More information: Locale ID (LCID) as defined by Microsoft. Not required. The default value is \"en-US\".")

  public String getLocale() {
    return locale;
  }


  public void setLocale(String locale) {
    this.locale = locale;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetrieveAccessToken retrieveAccessToken = (RetrieveAccessToken) o;
    return Objects.equals(this.countryCode, retrieveAccessToken.countryCode) &&
        Objects.equals(this.sdkVersion, retrieveAccessToken.sdkVersion) &&
        Objects.equals(this.livenessType, retrieveAccessToken.livenessType) &&
        Objects.equals(this.channelType, retrieveAccessToken.channelType) &&
        Objects.equals(this.successUrl, retrieveAccessToken.successUrl) &&
        Objects.equals(this.errorUrl, retrieveAccessToken.errorUrl) &&
        Objects.equals(this.locale, retrieveAccessToken.locale);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countryCode, sdkVersion, livenessType, channelType, successUrl, errorUrl, locale);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetrieveAccessToken {\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    sdkVersion: ").append(toIndentedString(sdkVersion)).append("\n");
    sb.append("    livenessType: ").append(toIndentedString(livenessType)).append("\n");
    sb.append("    channelType: ").append(toIndentedString(channelType)).append("\n");
    sb.append("    successUrl: ").append(toIndentedString(successUrl)).append("\n");
    sb.append("    errorUrl: ").append(toIndentedString(errorUrl)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

