/*
 * Mastercard Id Verification API
 * ID Verification provides the technology platform and operational service to perform real-time user identity verification for various use cases including financial services, healthcare, travel and education. The solution is offered via APIs to prove the identity of users based on their verified phone number and social security number.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.model.id.verification;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DeviceVerificationFingerprint
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-08T13:32:52.448-06:00[America/Chicago]")
public class DeviceVerificationFingerprint {
  public static final String SERIALIZED_NAME_VERIFICATION_FINGERPRINT = "verificationFingerprint";
  @SerializedName(SERIALIZED_NAME_VERIFICATION_FINGERPRINT)
  private String verificationFingerprint;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_OPTED_IN_CONSENT_STATUS = "optedInConsentStatus";
  @SerializedName(SERIALIZED_NAME_OPTED_IN_CONSENT_STATUS)
  private Boolean optedInConsentStatus;


  public DeviceVerificationFingerprint verificationFingerprint(String verificationFingerprint) {
    
    this.verificationFingerprint = verificationFingerprint;
    return this;
  }

   /**
   * Retrieved by calling the &#x60;redirectTargetUrl&#x60; returned from &#x60;/device-authentications&#x60;.
   * @return verificationFingerprint
  **/
  @ApiModelProperty(example = "4f544a6a596a4d304d3249745a4752684f5330304d3249794c5745324e7a41744d44646d5a5459314d57526a593245306644413d3a4e5af1cf7e052335e57a51f3e0b1362fa58d4c220d9adef9179895b4c4beda59", required = true, value = "Retrieved by calling the `redirectTargetUrl` returned from `/device-authentications`.")

  public String getVerificationFingerprint() {
    return verificationFingerprint;
  }


  public void setVerificationFingerprint(String verificationFingerprint) {
    this.verificationFingerprint = verificationFingerprint;
  }


  public DeviceVerificationFingerprint countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * ISO-3166 Alpha-2 standard.
   * @return countryCode
  **/
  @ApiModelProperty(example = "US", required = true, value = "ISO-3166 Alpha-2 standard.")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public DeviceVerificationFingerprint optedInConsentStatus(Boolean optedInConsentStatus) {
    
    this.optedInConsentStatus = optedInConsentStatus;
    return this;
  }

   /**
   * Should be true, validation exception will be thrown if it is false.
   * @return optedInConsentStatus
  **/
  @ApiModelProperty(example = "true", required = true, value = "Should be true, validation exception will be thrown if it is false.")

  public Boolean getOptedInConsentStatus() {
    return optedInConsentStatus;
  }


  public void setOptedInConsentStatus(Boolean optedInConsentStatus) {
    this.optedInConsentStatus = optedInConsentStatus;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceVerificationFingerprint deviceVerificationFingerprint = (DeviceVerificationFingerprint) o;
    return Objects.equals(this.verificationFingerprint, deviceVerificationFingerprint.verificationFingerprint) &&
        Objects.equals(this.countryCode, deviceVerificationFingerprint.countryCode) &&
        Objects.equals(this.optedInConsentStatus, deviceVerificationFingerprint.optedInConsentStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(verificationFingerprint, countryCode, optedInConsentStatus);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceVerificationFingerprint {\n");
    sb.append("    verificationFingerprint: ").append(toIndentedString(verificationFingerprint)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    optedInConsentStatus: ").append(toIndentedString(optedInConsentStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

