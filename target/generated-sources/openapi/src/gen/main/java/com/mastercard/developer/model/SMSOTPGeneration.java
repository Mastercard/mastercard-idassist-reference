/*
 * Mastercard Id Assist API
 * ID Assist provides the technology platform and operational service to allow the secure storage and transmission of Digital Identity data from the user to the Relying Party. The data is verified to a required level of assurance by an Identity Verification Provider.
 *
 * The version of the OpenAPI document: 1.1
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SMSOTPGeneration
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-08T13:32:51.698-06:00[America/Chicago]")
public class SMSOTPGeneration {
  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_OPTED_IN_CONSENT_STATUS = "optedInConsentStatus";
  @SerializedName(SERIALIZED_NAME_OPTED_IN_CONSENT_STATUS)
  private Boolean optedInConsentStatus;

  public static final String SERIALIZED_NAME_LOCALE = "locale";
  @SerializedName(SERIALIZED_NAME_LOCALE)
  private String locale;


  public SMSOTPGeneration phoneNumber(String phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * The phone number being queried in standard international format. It should be prefixed with the international dialling code, without the &#39;+&#39;.
   * @return phoneNumber
  **/
  @ApiModelProperty(example = "13143039289", required = true, value = "The phone number being queried in standard international format. It should be prefixed with the international dialling code, without the '+'.")

  public String getPhoneNumber() {
    return phoneNumber;
  }


  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public SMSOTPGeneration countryCode(String countryCode) {
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * ISO-3166 Alpha-2 standard.
   * @return countryCode
  **/
  @ApiModelProperty(example = "US", required = true, value = "ISO-3166 Alpha-2 standard.")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public SMSOTPGeneration optedInConsentStatus(Boolean optedInConsentStatus) {
    
    this.optedInConsentStatus = optedInConsentStatus;
    return this;
  }

   /**
   * Should be true, validation exception will be thrown if it is false.
   * @return optedInConsentStatus
  **/
  @ApiModelProperty(example = "true", required = true, value = "Should be true, validation exception will be thrown if it is false.")

  public Boolean getOptedInConsentStatus() {
    return optedInConsentStatus;
  }


  public void setOptedInConsentStatus(Boolean optedInConsentStatus) {
    this.optedInConsentStatus = optedInConsentStatus;
  }


  public SMSOTPGeneration locale(String locale) {
    
    this.locale = locale;
    return this;
  }

   /**
   * Follows the IETF BCP 47 Format E.g. \&quot;en-GB\&quot; (English - United Kingdom), \&quot;es-MX\&quot; (Spanish - Mexico).
   * @return locale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "en-GB", value = "Follows the IETF BCP 47 Format E.g. \"en-GB\" (English - United Kingdom), \"es-MX\" (Spanish - Mexico).")

  public String getLocale() {
    return locale;
  }


  public void setLocale(String locale) {
    this.locale = locale;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SMSOTPGeneration smSOTPGeneration = (SMSOTPGeneration) o;
    return Objects.equals(this.phoneNumber, smSOTPGeneration.phoneNumber) &&
        Objects.equals(this.countryCode, smSOTPGeneration.countryCode) &&
        Objects.equals(this.optedInConsentStatus, smSOTPGeneration.optedInConsentStatus) &&
        Objects.equals(this.locale, smSOTPGeneration.locale);
  }

  @Override
  public int hashCode() {
    return Objects.hash(phoneNumber, countryCode, optedInConsentStatus, locale);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SMSOTPGeneration {\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    optedInConsentStatus: ").append(toIndentedString(optedInConsentStatus)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

