/*
 * Mastercard Id Verification API
 * ID Verification provides the technology platform and operational service to perform real-time user identity verification for various use cases including financial services, healthcare, travel and education. The solution is offered via APIs to prove the identity of users based on their verified phone number and social security number.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.model.id.verification;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AccessToken
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-02-08T13:32:52.448-06:00[America/Chicago]")
public class AccessToken {
  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transactionId";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private String transactionId;

  public static final String SERIALIZED_NAME_SDK_TOKEN = "sdkToken";
  @SerializedName(SERIALIZED_NAME_SDK_TOKEN)
  private String sdkToken;

  public static final String SERIALIZED_NAME_API_DATA_CENTER = "apiDataCenter";
  @SerializedName(SERIALIZED_NAME_API_DATA_CENTER)
  private String apiDataCenter;

  public static final String SERIALIZED_NAME_DOCUMENT_VERIFICATION_URL = "documentVerificationUrl";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_VERIFICATION_URL)
  private String documentVerificationUrl;


  public AccessToken transactionId(String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

   /**
   * A random 128-bit UUID representing the transaction
   * @return transactionId
  **/
  @ApiModelProperty(example = "1ec14310-e85c-11ea-adc1-0242ac120002", required = true, value = "A random 128-bit UUID representing the transaction")

  public String getTransactionId() {
    return transactionId;
  }


  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }


  public AccessToken sdkToken(String sdkToken) {
    
    this.sdkToken = sdkToken;
    return this;
  }

   /**
   * Token to initialize the SDK
   * @return sdkToken
  **/
  @ApiModelProperty(example = "eyJhbGciOiJIUzUxMiIsInppcCI6IkdaSVAifQ.H4sIAAAAAAAAAB3NQQpCMQwE0Lt0baBJ0yZ159KtN0jTBgTBjYgg3t3__3KGN8w3rc_llc4JG6KUhrmoYjolc7_OvWfPKJ2hUzNgagE2hcC5hsYIUeOdH7gStVr6AtElwNUcrBNDFppYMjqxb9hvKzb9fNzfa4_HVkORomdoggsYp8HgPqAWF43VtsOcfn_stx4UsAAAAA.tDRVowYYcpQ03Vlt7D3MiovleiyRFQMv4qzXb7Lf_6CarphRrlWXan8-jE-YesNiAiT8tk0b-i8TKHGrcgT1VQ", required = true, value = "Token to initialize the SDK")

  public String getSdkToken() {
    return sdkToken;
  }


  public void setSdkToken(String sdkToken) {
    this.sdkToken = sdkToken;
  }


  public AccessToken apiDataCenter(String apiDataCenter) {
    
    this.apiDataCenter = apiDataCenter;
    return this;
  }

   /**
   * API Data Center
   * @return apiDataCenter
  **/
  @ApiModelProperty(example = "US, EU or SG", required = true, value = "API Data Center")

  public String getApiDataCenter() {
    return apiDataCenter;
  }


  public void setApiDataCenter(String apiDataCenter) {
    this.apiDataCenter = apiDataCenter;
  }


  public AccessToken documentVerificationUrl(String documentVerificationUrl) {
    
    this.documentVerificationUrl = documentVerificationUrl;
    return this;
  }

   /**
   * Web url to display in iframe
   * @return documentVerificationUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://mastercard.web.apac-1.jumio.link/web/v4/app?authorizationToken=eyJhbGciOiJIUzUxMiIsInppcCI6IkdaSVAifQ.H4sIAAAAAAAAAJXOQQ5CIQxF0b0wtkmBFqgzh07_Dkp_iWM10cS4d0FX4PTm5OW9gj9P93AMsaRaS845CVM4BDU776sLi5JGiM06UGGDLiUCRaLa0rDR6uJf7FH6mBwYtUyCBcSywBznbmMfGdPEj-H_cNt8TL35zfVql1V-12o0SZ3AGysQ1wKNFCGbsjlyUsTw_gANOZ5b4gAAAA.2bo6KfOvGIswNRNTXv6QtoGvHyNYp_j3LwHia9DtuWna3y_LLI1VgPZle46Q5cFHuuMJB7g7y4wHbtogBX2HfQ&locale=en-US", value = "Web url to display in iframe")

  public String getDocumentVerificationUrl() {
    return documentVerificationUrl;
  }


  public void setDocumentVerificationUrl(String documentVerificationUrl) {
    this.documentVerificationUrl = documentVerificationUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccessToken accessToken = (AccessToken) o;
    return Objects.equals(this.transactionId, accessToken.transactionId) &&
        Objects.equals(this.sdkToken, accessToken.sdkToken) &&
        Objects.equals(this.apiDataCenter, accessToken.apiDataCenter) &&
        Objects.equals(this.documentVerificationUrl, accessToken.documentVerificationUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionId, sdkToken, apiDataCenter, documentVerificationUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccessToken {\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    sdkToken: ").append(toIndentedString(sdkToken)).append("\n");
    sb.append("    apiDataCenter: ").append(toIndentedString(apiDataCenter)).append("\n");
    sb.append("    documentVerificationUrl: ").append(toIndentedString(documentVerificationUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

