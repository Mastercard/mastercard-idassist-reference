openapi: 3.0.3
info:
  title: Mastercard Id Verification API
  description: ID Verification provides the technology platform and operational service to perform real-time user identity verification for various use cases including financial services, healthcare, travel and education. The solution is offered via APIs to prove the identity of users based on their verified phone number and social security number.
  contact:
    name: API Support
    email: apisupport@mastercard.com
    url: https://developer.mastercard.com/support
  version: '1.0'
servers:
  - url: 'https://api.mastercard.com/idverify'
    description: Production server (uses live data)
  - url: 'https://sandbox.api.mastercard.com/idverify'
    description: Sandbox server (testing environment)
tags:
  - name: ID Document Data Extraction (OCR)
    description: ID document data retrieval (OCR) related
  - name: ID Document Verification
    description: ID Document Verification related operations
paths:
  /data-extractions/scans/{scan_id}:
    get:
      x-mastercard-api-encrypted: true
      summary: Returns the status of the document verification.
      tags:
        - ID Document Data Extraction (OCR)
      responses:
        '200':
          $ref: '#/components/responses/DataExtractionSuccessResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      description: Returns the status of the document verification as it's being processed by the vendor.
      operationId: extractScannedDocumentData
      parameters:
        - $ref: '#/components/parameters/ScanIdParameter'
        - $ref: '#/components/parameters/UserConsentParameter'
        - $ref: '#/components/parameters/RetrieveSelfieParameter'
        - $ref: '#/components/parameters/RetrieveDocumentImagesParameter'
        - $ref: '#/components/parameters/RetrieveFacemapParameter'
        - $ref: '#/components/parameters/DocumentTypeParameter'
        - $ref: '#/components/parameters/CountryParameter'
  /data-extractions/access-tokens:
    post:
      x-mastercard-api-encrypted: true
      tags:
        - ID Document Data Extraction (OCR)
      responses:
        '200':
          $ref: '#/components/responses/AccessTokenSuccessResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
      description: Return a provider token to be passed to the MIDS Liveness SDK module
      summary: The provider token is retrieved by country code and SDK version
      operationId: retrieveDataExtractionAccessToken
      requestBody:
        $ref: '#/components/requestBodies/AccessTokenRequest'
  /source-verifications/{issuing_country}/medicare-cards:
    post:
      x-mastercard-api-encrypted: true
      summary: Verifies the details of a medicare card document with an identity verification provider
      tags:
        - ID Document Verification
      responses:
        '200':
          $ref: '#/components/responses/MedicareCardSourceVerificationResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      description: Returns the status of the Medicare Card source verification as it's being processed by the vendor. Biometrics are not used with this API, which means document scanning is not required for the users to verify their identity. This will be a one-time verification with no data being stored.
      operationId: verifyMedicareCard
      parameters:
        - $ref: '#/components/parameters/IssuingCountryParameter'
      requestBody:
        $ref: '#/components/requestBodies/MedicareCardSourceVerificationRequest'
  /source-verifications/{issuing_country}/passports:
    post:
      x-mastercard-api-encrypted: true
      summary: Verifies the details of a passport document with an identity verification provider
      tags:
        - ID Document Verification
      responses:
        '200':
          $ref: '#/components/responses/PassportSourceVerificationResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
      description: Returns the Status of the Source Verification that has been processed by a trusted IVP.
      operationId: verifyPassport
      parameters:
        - $ref: '#/components/parameters/IssuingCountryParameter'
      requestBody:
        $ref: '#/components/requestBodies/PassportSourceVerificationRequest'
  /source-verifications/{issuing_country}/driving-licenses:
    post:
      x-mastercard-api-encrypted: true
      summary: Verifies the details of a driving license document with an identity verification provider
      tags:
        - ID Document Verification
      responses:
        '200':
          $ref: '#/components/responses/DriversLicenseSourceVerificationResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
      description: Returns the Status of the Source Verification that has been processed by a trusted IVP.
      operationId: verifyDriversLicense
      parameters:
        - $ref: '#/components/parameters/IssuingCountryParameter'
      requestBody:
        $ref: '#/components/requestBodies/DriversLicenseSourceVerificationRequest'
components:
  schemas:
    DocumentVerificationExtractedDataDocumentData:
      description: Document Data
      required:
        - dateOfBirth
        - documentNumber
        - documentStatus
        - documentType
        - expiryDate
        - firstName
        - gender
        - issuingCountry
        - issuingDate
        - lastName
      type: object
      properties:
        documentNumber:
          description: Document Number
          example: 1LViI488YkFZh8YjNlLf61BMn29cmQn
          type: string
          minLength: 1
          maxLength: 255
        documentStatus:
          description: Document Status. SUCCESS OR PENDING
          example: SUCCESS
          type: string
          minLength: 1
          maxLength: 7
        documentType:
          description: Document Type. PASSPORT OR DRIVER_LICENSE
          example: PASSPORT
          type: string
          minLength: 1
          maxLength: 50
        dateOfBirth:
          description: YYYY-MM-DD format
          example: '2020-09-09'
          type: string
          minLength: 10
          maxLength: 10
        firstName:
          description: Users First Name
          example: John
          type: string
          minLength: 1
          maxLength: 255
        lastName:
          description: Users Last Name
          example: Smith
          type: string
          minLength: 1
          maxLength: 255
        expiryDate:
          description: Document expiration date in YYYY-MM-DD format
          example: '2020-10-10'
          type: string
          format: date
          minLength: 10
          maxLength: 10
        gender:
          description: M/F
          example: M
          type: string
          minLength: 1
          maxLength: 1
        issuingCountry:
          description: Document issuing country
          example: USA
          type: string
          minLength: 3
          maxLength: 3
        issuingDate:
          description: Document issuing date
          example: '2020-09-09'
          type: string
          format: date
          minLength: 10
          maxLength: 10
        issuingPlace:
          description: Document issuing place
          example: New York
          type: string
          minLength: 1
          maxLength: 50
        issuingAuthority:
          description: Document issuing authority
          example: United States
          type: string
          minLength: 1
          maxLength: 50
        placeOfBirth:
          description: Users place of birth
          example: Boston
          type: string
          minLength: 1
          maxLength: 255
        addressLine1:
          description: Users Address Line 1
          example: 123 Main St.
          type: string
          minLength: 1
          maxLength: 255
        addressLine2:
          description: Users Address Line 2
          example: New York
          type: string
          minLength: 1
          maxLength: 255
        addressZipCode:
          description: Users zip code
          example: '10021'
          type: string
          minLength: 1
          maxLength: 50
        addressCity:
          description: Users City
          example: New York
          type: string
          minLength: 1
          maxLength: 100
        addressCountry:
          description: Users Country
          example: USA
          type: string
          minLength: 2
          maxLength: 3
        addressSubdivision:
          description: Users Subdivision
          example: MO
          type: string
          minLength: 2
          maxLength: 100
        issuingState:
          description: Users State
          example: MO
          type: string
          minLength: 2
          maxLength: 100
        formattedAddress:
          description: Users formatted Address
          example: 220 BLVD O FALLON MO
          type: string
          minLength: 1
          maxLength: 200
        selfie:
          description: Users Selfie Binary data, Base64 encoded.
          example: /mJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanq.........................
          type: string
          minLength: 1
        documentImageFront:
          description: Users document front binary data, Base64 encoded.
          example: /mJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanq.........................
          type: string
          minLength: 1
        documentImageBack:
          description: Users document back binary data, Base64 encoded.
          example: /mJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanq.........................
          type: string
          minLength: 1
        facemap:
          description: Users document facemap binary data, Base64 encoded.
          example: /mJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanq.........................
          type: string
          minLength: 1
    DocumentVerificationExtractedData:
      required:
        - status
        - transactionId
      type: object
      properties:
        documentData:
          $ref: '#/components/schemas/DocumentVerificationExtractedDataDocumentData'
        status:
          description: The status of the Status API, possible values are SUCCESS / PENDING
          example: SUCCESS
          type: string
          minLength: 1
          maxLength: 7
        transactionId:
          description: A random 128-bit UUID representing the transaction
          example: 1ec14310-e85c-11ea-adc1-0242ac120002
          type: string
          minLength: 36
          maxLength: 36
    AccessToken:
      required:
        - apiDataCenter
        - sdkToken
        - transactionId
      type: object
      properties:
        transactionId:
          description: A random 128-bit UUID representing the transaction
          type: string
          example: 1ec14310-e85c-11ea-adc1-0242ac120002
          minLength: 36
          maxLength: 36
        sdkToken:
          description: Token to initialize the SDK
          type: string
          example: eyJhbGciOiJIUzUxMiIsInppcCI6IkdaSVAifQ.H4sIAAAAAAAAAB3NQQpCMQwE0Lt0baBJ0yZ159KtN0jTBgTBjYgg3t3__3KGN8w3rc_llc4JG6KUhrmoYjolc7_OvWfPKJ2hUzNgagE2hcC5hsYIUeOdH7gStVr6AtElwNUcrBNDFppYMjqxb9hvKzb9fNzfa4_HVkORomdoggsYp8HgPqAWF43VtsOcfn_stx4UsAAAAA.tDRVowYYcpQ03Vlt7D3MiovleiyRFQMv4qzXb7Lf_6CarphRrlWXan8-jE-YesNiAiT8tk0b-i8TKHGrcgT1VQ
          minLength: 1
          maxLength: 255
        apiDataCenter:
          description: API Data Center
          type: string
          example: US,EU or SG
          minLength: 1
          maxLength: 2
    RetrieveAccessToken:
      required:
        - countryCode
        - sdkVersion
        - channelType
      type: object
      properties:
        countryCode:
          type: string
          example: US
          pattern: '^[a-zA-Z]{2}$'
          description: ISO-3166 Alpha-2 standard.
        sdkVersion:
          type: string
          example: 1.0.0
          pattern: '^[0-9]{1,5}\.[0-9]{1,5}\.[0-9]{1,5}$'
          description: sdk version
        livenessType:
          type: string
          example: GPA
          description: liveness type, GPA takes longer and provides more accuracy, LA is faster
          enum:
            - GPA
            - LA
          minLength: 2
          maxLength: 3
        channelType:
          type: string
          example: WEB
          description: the platform of enrollment process
          enum:
            - WEB
            - SDK
          minLength: 3
          maxLength: 3
    MedicareCardSourceVerificationRequestAttributes:
      required:
        - userConsent
        - cardColor
        - nameLine1
        - medicareCardNo
        - individualReferenceNo
        - countryCode
        - expiryDate
      properties:
        userConsent:
          description: Consent from User
          enum:
            - ACCEPT
            - DECLINE
            - REVOKE
            - EXPIRE
          type: string
          example: ACCEPT
          minLength: 6
          maxLength: 7
        cardColor:
          description: Medicard Color can be GREEN, BLUE OR YELLOW
          enum:
            - GREEN
            - BLUE
            - YELLOW
          type: string
          example: BLUE
          minLength: 4
          maxLength: 6
        nameLine1:
          description: Name Line 1
          example: Smith
          type: string
          minLength: 1
          maxLength: 27
          pattern: '^[a-zA-Z\s ,.''‘’-]{1,27}$'
        nameLine2:
          description: Name Line 2
          example: Steve
          type: string
          minLength: 1
          maxLength: 25
          pattern: '^[a-zA-Z\s ,.''‘’-]{1,25}$'
        nameLine3:
          description: Name Line 3
          example: Baven
          type: string
          minLength: 1
          maxLength: 23
          pattern: '^[a-zA-Z\s ,.''‘’-]{1,23}$'
        nameLine4:
          description: Name Line 4
          example: Mike
          type: string
          minLength: 1
          maxLength: 21
          pattern: '^[a-zA-Z\s ,.''‘’-]{1,21}$'
        medicareCardNo:
          description: Unique number for Medicare card
          type: string
          maxLength: 10
          example: '1234567890'
          pattern: '^[0-9]{10}$'
        individualReferenceNo:
          description: Individual Reference Number
          type: string
          maxLength: 1
          example: '1'
          pattern: '^[0-9]{1}$'
        countryCode:
          description: Country code (case insensitive) as described in the ISO 3166 alpha-2 international standard
          type: string
          example: 'AUS'
          pattern: '^[a-zA-Z]{3}'
        birthDate:
          example: '2010-10-25'
          description: YYYY-MM-DD format
          type: string
          format: date
          minLength: 10
          maxLength: 10
          pattern: '^[0-9]{4}-[0-1][0-9]-[0-3][0-9]'
        expiryDate:
          example: '2000-01 OR 2000-12-31'
          description: The expiry date as it appears on the card, usually in DD/MM/YYYY for Green Medicare Cards and MM/YYYY for Blue and Yellow Medicare Cards. API accepts YYYY-MM format for Green Medicare Cards and YYYY-MM-DD for Blue and Yellow Medicare Cards.
          type: string
          minLength: 07
          maxLength: 10
    MedicareCardSourceVerificationResult:
      required:
        - verificationResult
      type: object
      properties:
        verificationResult:
          type: string
          example: DOCUMENT_VERIFIED
          description: "Verification Results, following : DOCUMENT_VERIFIED - Document matches with the IVP registered document, DOCUMENT_NOT_VERIFIED - Document does not match with any of the IVP registered document, DOCUMENT_INVALID - Document is invalid or not electronically captured"
          minLength: 16
          maxLength: 21
    PassportSourceVerificationRequestAttributes:
      required:
        - documentNumber
        - userConsent
        - firstName
        - lastName
        - dateOfBirth
      type: object
      properties:
        documentNumber:
          description: Document Number
          type: string
          example: 1LViI488YkFZh8YjNlLf61BMn29cmQn
          pattern: '^[0-9a-zA-Z\-]{1,50}$'
        userConsent:
          description: Consent from User
          enum:
            - ACCEPT
            - DECLINE
            - REVOKE
            - EXPIRE
          type: string
          example: ACCEPT
          minLength: 6
          maxLength: 7
        dateOfBirth:
          description: YYYY-MM-DD format
          type: string
          format: date
          example: '1990-01-01'
          pattern: '^[0-9]{4}-[0-1][0-9]-[0-3][0-9]$'
        firstName:
          description: Users First Name
          type: string
          example: John
          pattern: '^[a-zA-Z\s ,.''‘’-]{1,255}$'
        lastName:
          description: Users Last Name
          type: string
          example: Smith
          pattern: '^[a-zA-Z\s ,.''‘’-]{1,255}$'
        gender:
          description: Users Gender
          type: string
          example: M
          pattern: '^[M|F|X]$'
    DriversLicenseSourceVerificationRequestAttributes:
      required:
        - documentNumber
        - userConsent
        - firstName
        - lastName
        - dateOfBirth
        - stateCode
      type: object
      properties:
        documentNumber:
          description: Document Number
          type: string
          example: 1LViI488YkFZh8YjNlLf61BMn29cmQn
          pattern: '^[0-9a-zA-Z\-]{1,50}$'
        userConsent:
          description: Consent from User
          enum:
            - ACCEPT
            - DECLINE
            - REVOKE
            - EXPIRE
          type: string
          example: ACCEPT
          minLength: 6
          maxLength: 7
        dateOfBirth:
          description: YYYY-MM-DD format
          type: string
          format: date
          example: '1990-01-01'
          pattern: '^[0-9]{4}-[0-1][0-9]-[0-3][0-9]$'
        firstName:
          description: Users First Name
          type: string
          example: John
          pattern: '^[a-zA-Z\s ,.''‘’-]{1,255}$'
        lastName:
          description: Users Last Name
          type: string
          example: Smith
          pattern: '^[a-zA-Z\s ,.''‘’-]{1,255}$'
        stateCode:
          description: State code
          type: string
          example: NSW
          pattern: '^[a-zA-Z]{2,3}$'
    SourceVerificationResult:
      required:
        - verificationResult
      type: object
      properties:
        verificationResult:
          type: string
          description: "Verification Results, following : DOCUMENT_VERIFIED - Document matches with the IVP registered document, DOCUMENT_NOT_VERIFIED - Document does not match with any of the IVP registered document, DOCUMENT_INVALID - Document is invalid or not electronically captured"
          example: DOCUMENT_VERIFIED
          minLength: 16
          maxLength: 21
    ApiError:
      required:
        - Errors
      type: object
      properties:
        Errors:
          $ref: '#/components/schemas/Errors'
    Errors:
      description: List of Errors
      example:
        $ref: '#/components/examples/NotFoundExample'
      required:
        - Error
      type: object
      properties:
        Error:
          $ref: '#/components/schemas/ErrorList'
    ErrorList:
      description: Error Details
      type: array
      minItems: 1
      items:
        $ref: '#/components/schemas/Error'
    Error:
      type: object
      properties:
        Source:
          type: string
          description: Source of where the error occured
          example: mids
        ReasonCode:
          type: string
          description: Code of the error
          example: USER_PROFILE_ID_NOT_FOUND
        Description:
          type: string
          description: The cause of the error
          example: The provided userProfileId does not exist
        Recoverable:
          type: boolean
          description: Indiciates if the error can be recovered from
          example: false
        Details:
          type: string
          description: Contains information about the error
          example:  IOException Occured
  responses:
    NotFoundError:
      description: Request didn't match an existing resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          examples:
            NotFoundExample:
              $ref: '#/components/examples/NotFoundExample'
    BadRequestError:
      description: Something was wrong with the request.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          examples:
            BadRequestExampleUserConsent:
              $ref: '#/components/examples/BadRequestExampleUserConsent'
            BadRequestExampleCountryCode:
              $ref: '#/components/examples/BadRequestExampleCountryCode'
            BadRequestExamplePhoneNumber:
              $ref: '#/components/examples/BadRequestExamplePhoneNumber'
            BadRequestExampleIVPConnectionTimeout:
              $ref: '#/components/examples/BadRequestExampleIVPConnectionTimeout'
            BadRequestExampleIVPSystemError:
              $ref: '#/components/examples/BadRequestExampleIVPSystemError'
            BadRequestExampleMedicareExpireDate:
              $ref: '#/components/examples/BadRequestExampleMedicareExpireDate'
            BadRequestExampleMedicareName:
              $ref: '#/components/examples/BadRequestExampleMedicareName'
            BadRequestExampleMedicareIndividualReferenceNo:
              $ref: '#/components/examples/BadRequestExampleMedicareIndividualReferenceNo'
            BadRequestExampleMedicareMedicareNumber:
              $ref: '#/components/examples/BadRequestExampleMedicareMedicareNumber'
            BadRequestExampleMedicareCountryCode:
              $ref: '#/components/examples/BadRequestExampleMedicareCountryCode'
            BadRequestExampleMedicareUserConsent:
              $ref: '#/components/examples/BadRequestExampleMedicareUserConsent'
    ForbiddenError:
      description: Consent not given.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiError'
          examples:
            ForbiddenExample:
              $ref: '#/components/examples/ForbiddenExample'
            ForbiddenExampleUnauthorizedScopedFields:
              $ref: '#/components/examples/ForbiddenExampleUnauthorizedScopedFields'
    DataExtractionSuccessResponse:
      description: Success
      headers:
        X-Transaction-ID:
          $ref: '#/components/headers/X-Transaction-ID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentVerificationExtractedData'
    AccessTokenSuccessResponse:
      description: Success
      headers:
        X-Transaction-ID:
          $ref: '#/components/headers/X-Transaction-ID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessToken'
    MedicareCardSourceVerificationResponse:
      description: Success
      headers:
        X-Transaction-ID:
          $ref: '#/components/headers/X-Transaction-ID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MedicareCardSourceVerificationResult'
          examples:
            MedicareSuccessExample:
              $ref: '#/components/examples/MedicareSuccessExample'
            MedicareDataNotMatchedExample:
              $ref: '#/components/examples/MedicareDataNotMatchedExample'
            MedicareDocumentInvalidExample:
              $ref: '#/components/examples/MedicareDocumentInvalidExample'
    DriversLicenseSourceVerificationResponse:
      description: Success
      headers:
        X-Transaction-ID:
          $ref: '#/components/headers/X-Transaction-ID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SourceVerificationResult'
    PassportSourceVerificationResponse:
      description: Success
      headers:
        X-Transaction-ID:
          $ref: '#/components/headers/X-Transaction-ID'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SourceVerificationResult'
  requestBodies:
    AccessTokenRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RetrieveAccessToken'
      required: true
    MedicareCardSourceVerificationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MedicareCardSourceVerificationRequestAttributes'
      required: true
    PassportSourceVerificationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PassportSourceVerificationRequestAttributes'
      required: true
    DriversLicenseSourceVerificationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DriversLicenseSourceVerificationRequestAttributes'
      required: true
  examples:
    NotFoundExample:
      value:
        Errors:
          Error:
            - Source: mids
              ReasonCode: USER_PROFILE_ID_NOT_FOUND
              Description: The provided userProfileId does not exist
              Recoverable: false
    ForbiddenExample:
      value:
        Errors:
          Error:
            - Source: mids
              ReasonCode: CONSENT_NOT_GIVEN
              Description: User Consent Not Given
              Recoverable: false
    ForbiddenExampleUnauthorizedScopedFields:
      value:
        Errors:
          Error:
            - Source: mids
              ReasonCode: UNAUTHORIZED_SCOPED_FIELDS
              Description: 'UNAUTHORIZED_SCOPED_FIELDS: Requested scoped fields are not part of whitelisted fields'
              Recoverable: false
              Details: null
    BadRequestExampleUserConsent:
      value:
        Errors:
          Error:
            - Source: mids
              ReasonCode: VALIDATION_ERROR
              Description: Unexpected value 'Invalid' for enumerate field
              Recoverable: false
              Details: null
    BadRequestExampleCountryCode:
      value:
        Errors:
          Error:
            - Source: mids
              ReasonCode: VALIDATION_ERROR
              Description: Invalid value US4 for 'countryCode'
              Recoverable: false
              Details: null
    BadRequestExamplePhoneNumber:
      value:
        Errors:
          Error:
            - Source: mids
              ReasonCode: VALIDATION_ERROR
              Description: Invalid value ASD for 'phoneNumber'
              Recoverable: false
              Details: null
    BadRequestExampleIVPConnectionTimeout:
      value:
        Errors:
          Error:
            - Source: mids
              ReasonCode: IVP_CONNECTION_TIMEOUT
              Description: Connection timeout when trying to connect with the Identity Verification Provider. Please look at 'details' for additional information.
              Recoverable: false
              Details: Received Connection TimeOut Exception
    BadRequestExampleIVPSystemError:
      value:
        Errors:
          Error:
            - Source: mids
              ReasonCode: IVP_SYSTEM_ERROR
              Description: Received system error from the Identity Verification Provider. Please look at 'details' for additional information
              Recoverable: false
              Details: System Error Received
    BadRequestExampleMedicareExpireDate:
      value:
        Errors:
          Error:
            - Source: mids
              ReasonCode: VALIDATION_ERROR
              Description: Invalid value for 'expiry date'
              Recoverable: false
              Details: null
    BadRequestExampleMedicareName:
      value:
        Errors:
          Error:
            - Source: mids
              ReasonCode: VALIDATION_ERROR
              Description: Invalid value for 'nameLine' field OR value exceeds allowed max characters
              Recoverable: false
              Details: null
    BadRequestExampleMedicareIndividualReferenceNo:
      value:
        Errors:
          Error:
            - Source: mids
              ReasonCode: VALIDATION_ERROR
              Description: Invalid value for 'INDIVIDUAL_REFERENCE_NO'
              Recoverable: false
              Details: null
    BadRequestExampleMedicareMedicareNumber:
      value:
        Errors:
          Error:
            - Source: mids
              ReasonCode: VALIDATION_ERROR
              Description: Invalid value for 'Medicare card number'
              Recoverable: false
              Details: null
    BadRequestExampleMedicareCountryCode:
      value:
        Errors:
          Error:
            - Source: mids
              ReasonCode: VALIDATION_ERROR
              Description: Invalid value for 'Country code'
              Recoverable: false
              Details: null
    BadRequestExampleMedicareUserConsent:
      value:
        Errors:
          Error:
            - Source: mids
              ReasonCode: VALIDATION_ERROR
              Description: User consent not given
              Recoverable: false
              Details: null
    MedicareSuccessExample:
      value:
        verificationResult: DOCUMENT_VERIFIED
    MedicareDataNotMatchedExample:
      value:
        verificationResult: DOCUMENT_NOT_VERIFIED
    MedicareDocumentInvalidExample:
      value:
        verificationResult: DOCUMENT_INVALID
        reason: Provided data is invalid or not electronically captured
  parameters:
    IssuingCountryParameter:
      name: "issuing_country"
      in: "path"
      description: "Country of issue for the document in the ISO 3166-1 alpha-3 format"
      example: USA
      required: true
      schema:
        type: string
        pattern: '^[A-Z]{3}'
    ScanIdParameter:
      name: "scan_id"
      in: "path"
      description: "UUID representing the scanned document verification process"
      example: df52649e-4096-456a-bca0-751ee470009f
      required: true
      schema:
        maxLength: 36
        minLength: 36
        type: string
        pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
    UserConsentParameter:
      name: user_consent
      in: query
      description: Consent from User
      example: ACCEPT
      required: true
      schema:
        type: string
        pattern: '^(ACCEPT|DECLINE|REVOKE|EXPIRE)$'
    RetrieveSelfieParameter:
      name: retrieve_selfie
      in: query
      description: Flag indicating if the selfie needs to be retrieved.
      example: true
      required: true
      schema:
        type: string
        pattern: '^(true|false)$'
    RetrieveDocumentImagesParameter:
      name: retrieve_document_images
      in: query
      description: Flag indicating if the document images needs to be retrieved.
      example: true
      required: true
      schema:
        type: string
        pattern: '^(true|false)$'
    RetrieveFacemapParameter:
      name: retrieve_facemap
      in: query
      description: Flag indicating if the facemap needs to be retrieved.
      example: true
      required: true
      schema:
        type: string
        pattern: '^(true|false)$'
    DocumentTypeParameter:
      name: document_type
      in: query
      description: document Type
      example: DRIVING_LICENSE
      required: true
      schema:
        type: string
        pattern: '^(DRIVING_LICENSE|PASSPORT)$'
    CountryParameter:
      name: user_selected_country
      in: query
      description: country where the the document provided
      example: USA
      required: true
      schema:
        type: string
        pattern: '^[A-Z]{3}'
  headers:
    X-Transaction-ID:
      schema:
        type: string
        example: 2d077b9c-3c06-44ac-b00e-d78fe8cce606
        description: A random 128-bit UUID representing the transaction